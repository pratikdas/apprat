name: Continuous Integration (CI)

on:
  push:
    branches:
      # We can define multiple branches as well      
      - main
  pull_request:
    branches:
      - main
      
jobs:
  build_test:
    # Defines the type of runner the job runs on
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout to the repository
        uses: actions/checkout@v2
        
      - name: Set up NodeJS environment
        uses: actions/setup-node@v2
        with:
          # Reads the node version from the .nvmrc file itself 
          node-version-file: './app-rat-web/.nvmrc'
          # The node version can be hard-coded 
          # node-version: 14
            
      # Consider this as an add on to optimize the execution of actions
      - name: Cache node modules
        id: cache-npm
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
       
      - name: Install package dependencies
        run: npm install
        working-directory: ./app-rat-web      
      - name: Check linting and formatting
        # Custom script for checking the linting and formatting being in place
        run: npm run lint
        working-directory: ./app-rat-web
      # Run test cases and this could ensure minimum coverage as well if set
      - name: Execute test cases
        run: npm run test
        working-directory: ./app-rat-web
        
      - name: Create test build
        run: npm run build
        working-directory: ./app-rat-web

  push_to_Docker_Hub:    
    runs-on: ubuntu-latest
    needs: [build_test]
    steps: 
    - name: checkout repo
      uses: actions/checkout@v2

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Login to DockerHub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
  
    - name: Build and push
      uses: docker/build-push-action@v2
      with:
        context: ./app-rat-web
        file: ./Dockerfile
        push: true
        tags: ${{ secrets.DOCKERHUB_USERNAME }}/apprat:latest     
